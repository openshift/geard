#!/bin/bash

if [ "$GOPATH" == "" ]; then
	echo "Must set GOPATH"
	exit 1
fi

ORIG_GOPATH=$GOPATH
export GOPATH=$ORIG_GOPATH:$ORIG_GOPATH/src/github.com/openshift/geard/vendor

function usage() {
	echo "build [-s] [-d] [-i] [-n]"
	echo "-s builds with selinux enabled"
	echo "-d builds/deploys systemd service with docker"
	echo "-i builds with idler daemon"
	echo "-l builds with vendored packages only (skips go get)"
	echo "-n do not copy binaries into /bin and /sbin location"
	exit 1
}

use_selinux=false
handle_systemd=false
build_idler=false
skip_go_get=false
copy_binaries=true

while getopts "sdiln" o; do
	case "${o}" in
		s) use_selinux=true;;
		d) handle_systemd=true;;
		i) build_idler=true;;
		l) skip_go_get=true;;
		n) copy_binaries=false;;
		*) usage;;
	esac
done

tags=""

if $use_selinux; then
	tags="selinux"
fi

if $build_idler; then
	tags="$tags idler"
fi

if $handle_systemd; then
	docker build -rm -t ccoleman/geard $ORIG_GOPATH && sudo systemctl restart geard-image.service	
else
	if ! $skip_go_get; then
		echo "Downloading build dependencies"  
		# these packages should not be vendored
		echo " "
		echo "Note: Packages downloaded by go get at this point may need to be vendored."
		go get -v -d -tags "$tags" ./...
		echo "..done"
	fi
  
	echo "Building.."
	go install -tags "$tags" github.com/openshift/geard/cmd/gear
	go install -tags "$tags" github.com/openshift/geard/cmd/switchns
	go install -tags "$tags" github.com/openshift/geard/ssh/cmd/gear-auth-keys-command
	go install -tags "$tags" github.com/openshift/geard/cmd/geard-container-init

	if $copy_binaries; then
		sudo /usr/bin/cp -f $ORIG_GOPATH/bin/gear-auth-keys-command /usr/sbin/
		sudo /usr/bin/cp -f $ORIG_GOPATH/bin/switchns /usr/bin/
		sudo /usr/bin/cp -f $ORIG_GOPATH/bin/gear /usr/bin/
		sudo /usr/bin/cp -f $ORIG_GOPATH/bin/geard-container-init /usr/sbin/
		sudo chmod +s /usr/bin/switchns
		sudo restorecon -v /usr/sbin/gear-auth-keys-command /usr/bin/gear /usr/bin/switchns
	fi
	echo "..done"  
fi
